server.contextPath=/nostra-movie
# server configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true
spring.application.name=nostra-movie
server.servlet.context-path=/nostra-movie

# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:postgresql://localhost:5432/Nostra Movie

# Username and password
#spring.datasource.username = root
#spring.datasource.password = root
spring.datasource.username =Nostra
spring.datasource.password =Nostra
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

s3.bucket=filesdev.klob.id
s3.folder=user
s3.url=http://filesdev.klob.id/

